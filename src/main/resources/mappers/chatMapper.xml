<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.lswr.demo.model.dao.ChatDao">

	<!-- 1. 유저가 속한 채팅방 목록 조회 -->
	<select id="selectChatRoomList" parameterType="long"
		resultType="ChatRoom">
		SELECT cr.room_id, cr.room_name, cr.room_type
		FROM ChatRoom
		AS cr
		INNER JOIN Party p ON cr.room_id = p.room_id
		WHERE p.user_id =
		#{userId}
	</select>

	<!-- 2. 오픈 채팅방 목록 조회 -->
	<select id="selectOpenChatRoomList" parameterType="Long"
		resultType="ChatRoom">
		SELECT cr.room_id, cr.room_name, cr.room_type
		FROM ChatRoom
		AS cr
		WHERE cr.room_id NOT IN (
		SELECT p.room_id
		FROM Party p
		WHERE
		p.user_id = #{userId}
		) AND cr.room_type = 'OPEN'
	</select>

	<!-- 3. 채팅방 생성 -->
	<insert id="createChatRoom" parameterType="ChatRoom">
		INSERT INTO ChatRoom
		(room_id, room_name, room_type,created_date)
		VALUES (#{roomId},
		#{roomName}, #{roomType}, #{createdDate})
	</insert>

	<!-- 4. 채팅방 참여 -->
	<insert id="enterChatRoom" parameterType="Party">
		INSERT INTO Party
		(room_id, user_id,partied_date)
		VALUES (#{roomId}, #{userId},
		#{partiedDate})
	</insert>

	<!-- 5. 채팅방 삭제 -->
	<delete id="deleteUserInChatRoom" parameterType="Party">
		DELETE FROM Party
		WHERE user_id = #{userId} AND room_id = #{roomId}
	</delete>

	<!-- 6. 채팅방 찾기 -->
	<select id="selectChatRoom" parameterType="String"
		resultType="ChatRoom">
		SELECT *
		FROM ChatRoom
		WHERE room_id = #{roomId}
	</select>

	<!-- 7. 채팅 가져오기 -->
	<select id="selectAllChatting" parameterType="Party"
		resultType="ChatMessage">
		SELECT
		cm.message_id AS messageId,
		cm.room_id AS roomId,
		cm.user_id AS userId,
		cm.sended_date AS sendedDate,
		cm.content AS content,
		cm.message_type AS messageType,
		u.user_img AS userImg,
		u.nickname AS nickname
		FROM ChatMessage AS cm
		JOIN Party p ON cm.room_id = p.room_id
		JOIN User u ON cm.user_id = u.user_id
		WHERE
		cm.room_id = #{roomId}
		AND cm.sended_date >= #{partiedDate}
		AND p.user_id = #{userId}
		ORDER BY
		cm.sended_date ASC
	</select>


	<!-- 8. 참여 기록 찾기 -->
	<select id="findParty" parameterType="Party" resultType="Party">
		SELECT *
		FROM PARTY
		WHERE room_id=#{roomId} and user_id=#{userId}
	</select>

	<!-- 9.채팅방 메시지 조회 -->
	<select id="findChatMessage" parameterType="Party"
		resultType="Integer">
		SELECT COUNT(*)
		FROM ChatMessage
		WHERE room_id=#{roomId} and
		user_id=#{userId}
	</select>

	<!-- 10.메시지 전송 -->
	<insert id="insertChatMessage" parameterType="ChatMessage">
		INSERT INTO ChatMessage (message_type, room_id, user_id, sended_date,
		content)
		VALUES (#{messageType}, #{roomId}, #{userId}, #{sendedDate}, #{content})
	</insert>

	<!-- 11. 오픈 채팅 검색 -->
	<select id="findOpenChatByKeyword" parameterType="String"
		resultType="ChatRoom">
		SELECT *
		FROM ChatRoom
		WHERE room_name LIKE CONCAT('%', #{keyWword}, '%')
		AND room_type = 'OPEN'
	</select>
</mapper>